"""comment

Revision ID: 4d4d1eb25f5a
Revises:
Create Date: 2024-04-10 03:38:28.857670

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4d4d1eb25f5a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "products",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("code", sa.String(length=255), nullable=False, comment="商品コード"),
        sa.Column("name", sa.String(length=255), nullable=False, comment="商品名"),
        sa.Column("unit_price", sa.BigInteger(), nullable=False, comment="単価"),
        sa.Column("percent_tax", sa.String(length=255), nullable=False, comment="消費税率"),
        sa.Column("created_at", sa.DateTime(), nullable=False, comment="作成日時"),
        sa.Column("updated_at", sa.DateTime(), nullable=False, comment="更新日時"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False, comment="名前"),
        sa.Column("email", sa.String(length=255), nullable=False, comment="メールアドレス"),
        sa.Column("password", sa.String(length=255), nullable=False, comment="パスワード"),
        sa.Column("created_at", sa.DateTime(), nullable=False, comment="作成日時"),
        sa.Column("updated_at", sa.DateTime(), nullable=False, comment="更新日時"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("code", sa.String(length=255), nullable=False, comment="注文コード"),
        sa.Column("user_id", sa.BigInteger(), nullable=False, comment="ユーザーID"),
        sa.Column(
            "post_code",
            sa.String(length=10),
            nullable=False,
            comment="ユーザー郵便番号",
        ),
        sa.Column(
            "user_address1",
            sa.String(length=255),
            nullable=False,
            comment="ユーザー住所1",
        ),
        sa.Column(
            "user_address2",
            sa.String(length=255),
            nullable=False,
            comment="ユーザー住所2",
        ),
        sa.Column("user_tel", sa.String(length=15), nullable=False, comment="ユーザー電話番号"),
        sa.Column(
            "user_email",
            sa.String(length=255),
            nullable=False,
            comment="ユーザーメールアドレス",
        ),
        sa.Column("user_name", sa.String(length=255), nullable=False, comment="ユーザー名"),
        sa.Column(
            "shipping_post_code",
            sa.String(length=10),
            nullable=False,
            comment="配送先郵便番号",
        ),
        sa.Column(
            "shipping_user_address1",
            sa.String(length=255),
            nullable=False,
            comment="配送先ユーザー住所1",
        ),
        sa.Column(
            "shipping_user_address2",
            sa.String(length=255),
            nullable=False,
            comment="配送先ユーザー住所2",
        ),
        sa.Column(
            "shipping_user_tel",
            sa.String(length=15),
            nullable=False,
            comment="配送先ユーザー電話番号",
        ),
        sa.Column(
            "shipping_user_email",
            sa.String(length=255),
            nullable=False,
            comment="配送先ユーザーメールアドレス",
        ),
        sa.Column(
            "shipping_user_name",
            sa.String(length=255),
            nullable=False,
            comment="配送先ユーザー名",
        ),
        sa.Column("tax", sa.Integer(), nullable=False, comment="消費税"),
        sa.Column("subtotal", sa.Integer(), nullable=False, comment="小計"),
        sa.Column("total_price", sa.Integer(), nullable=False, comment="合計金額"),
        sa.Column("payment_dated_at", sa.DateTime(), nullable=True, comment="支払い日時"),
        sa.Column("created_at", sa.DateTime(), nullable=False, comment="作成日時"),
        sa.Column("updated_at", sa.DateTime(), nullable=False, comment="更新日時"),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "order_details",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("order_id", sa.BigInteger(), nullable=False, comment="注文ID"),
        sa.Column("product_id", sa.BigInteger(), nullable=False, comment="商品ID"),
        sa.Column(
            "product_code", sa.String(length=255), nullable=False, comment="商品コード"
        ),
        sa.Column("product_name", sa.String(length=255), nullable=False, comment="商品名"),
        sa.Column("product_unit_price", sa.BigInteger(), nullable=False, comment="単価"),
        sa.Column(
            "product_percent_tax", sa.String(length=255), nullable=False, comment="税率"
        ),
        sa.Column("purchase_number", sa.BigInteger(), nullable=False, comment="購入数"),
        sa.Column("price", sa.BigInteger(), nullable=False, comment="金額"),
        sa.Column("created_at", sa.DateTime(), nullable=False, comment="作成日時"),
        sa.Column("updated_at", sa.DateTime(), nullable=False, comment="更新日時"),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("order_details")
    op.drop_table("orders")
    op.drop_table("users")
    op.drop_table("products")
    # ### end Alembic commands ###
